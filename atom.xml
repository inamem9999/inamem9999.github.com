<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[砂場]]></title>
  <link href="http://inamem9999.github.io/atom.xml" rel="self"/>
  <link href="http://inamem9999.github.io/"/>
  <updated>2017-08-17T08:28:59+09:00</updated>
  <id>http://inamem9999.github.io/</id>
  <author>
    <name><![CDATA[inamem9999]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Googletest/mock関連]]></title>
    <link href="http://inamem9999.github.io/blog/2017/07/23/googletest-create/"/>
    <updated>2017-07-23T11:50:34+09:00</updated>
    <id>http://inamem9999.github.io/blog/2017/07/23/googletest-create</id>
    <content type="html"><![CDATA[<h2>GoogleTest</h2>

<h3>入門ガイド</h3>

<ul>
<li><a href="https://github.com/google/googletest/blob/master/googletest/docs/Primer.md">公式</a></li>
<li><a href="http://opencv.jp/googletestdocs/primer.html">日本語訳</a>

<ul>
<li>日本語訳は元の文書がちょっと古いようで、公式の記載と合わない箇所がある(だいたい同じなので混乱することはない)</li>
</ul>
</li>
</ul>


<h3>上級ガイド</h3>

<ul>
<li><a href="https://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md">公式</a></li>
<li><a href="http://opencv.jp/googletestdocs/advancedguide.html">日本語訳</a></li>
</ul>


<h2>GoogleMock</h2>

<h3>超入門編</h3>

<ul>
<li><a href="https://github.com/google/googletest/blob/master/googlemock/docs/ForDummies.md">公式</a></li>
<li><a href="http://opencv.jp/googlemockdocs/fordummies.html">日本語訳</a>

<ul>
<li>日本語訳は元の文書がちょっと古いようで、公式の記載と合わない箇所がある(だいたい同じなので混乱することはない)</li>
</ul>
</li>
</ul>


<h3>クックブック</h3>

<ul>
<li><a href="https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md">公式</a></li>
<li><a href="http://opencv.jp/googlemockdocs/cookbook.html">日本語訳</a></li>
</ul>


<h3>チートシート</h3>

<ul>
<li><a href="https://github.com/google/googletest/blob/master/googlemock/docs/CheatSheet.md">公式</a></li>
<li><a href="http://opencv.jp/googlemockdocs/cheatsheet.html">日本語訳</a></li>
</ul>


<p>大体はクックブックとチートシートを読めば解決するので、以下はクックブックに載っていない使い方(随時追加)</p>

<h2>構造体メンバの値をMatcherに使う</h2>

<p><code>Field</code> Matcherはクラスのメンバだけでなく構造体のメンバにも使える。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>typedef struct {
</span><span class='line'>    int i;
</span><span class='line'>    float f;
</span><span class='line'>    char str[1024];
</span><span class='line'>} Foo_t;
</span><span class='line'>
</span><span class='line'>TEST(test_foo, foo_mocktest) {
</span><span class='line'>    foomock = new FooMock;
</span><span class='line'>
</span><span class='line'>    // 引数Foo_t型構造体のメンバiが1のときにマッチ
</span><span class='line'>    EXPECT_CALL(*foomock, m_printfoo(Field(&Foo_t::i, Eq(1))))
</span><span class='line'>    .WillRepeatedly(testing::Return(29));
</span><span class='line'>    
</span><span class='line'>    EXPECT_EQ(29, doFoo());
</span><span class='line'>    delete foomock;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GoogleTest/Mockのインストール]]></title>
    <link href="http://inamem9999.github.io/blog/2017/07/23/googletest-install/"/>
    <updated>2017-07-23T11:21:22+09:00</updated>
    <id>http://inamem9999.github.io/blog/2017/07/23/googletest-install</id>
    <content type="html"><![CDATA[<h2>入手</h2>

<p><a href="https://github.com/google/googletest">公式</a>の<code>release</code>から入手</p>

<h2>インストール</h2>

<h3>Windows</h3>

<p>アーカイブ内の<code>googlemock/msvc</code>内に各バージョンのプロジェクトファイルがあるためそれを用いてビルド。Static Libraryが作られる。</p>

<h3>macOS</h3>

<p>アーカイブ内の<code>googletest/xcode</code>にFrameworkをビルドするためのプロジェクトファイルがあるが、1.8.0ではFrameworkに含めるヘッダファイルに不備があるため、使えない。</p>

<p><code>googlemock</code>内でcmakeを実行すればtest、mockともにStatic Library形式でビルドできる。</p>

<h3>Linuxなど</h3>

<p>アーカイブ内の<code>googlemock</code>フォルダでcmakeを実行すればStatic Library形式でビルドできる。</p>

<h2>使い方</h2>

<ol>
<li>ビルドしたライブラリをプロジェクト内に配置</li>
<li>テストコードの先頭でヘッダをインクルード</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include "gtest/gtest.h"
</span><span class='line'>#include "gmock/gmock.h"</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressメモ]]></title>
    <link href="http://inamem9999.github.io/blog/2017/07/15/octopress-memo/"/>
    <updated>2017-07-15T09:46:15+09:00</updated>
    <id>http://inamem9999.github.io/blog/2017/07/15/octopress-memo</id>
    <content type="html"><![CDATA[<h2>ダウンロード</h2>

<p>GitHubのリポジトリからダウンロードする</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/imathis/octopress.git</span></code></pre></td></tr></table></div></figure>


<h2>セットアップ</h2>

<p>bundlerが無かったらインストールする</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install bundler</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle install</span></code></pre></td></tr></table></div></figure>


<p><code>_config.yml</code>を編集して、サイト名などの初期情報を設定しておく</p>

<p>GitHub pagesへのデプロイ設定</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<h2>ブログエントリーの追加</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake new_post["title"]</span></code></pre></td></tr></table></div></figure>


<p><code>source/_posts/YYYY-MM-DD-title.markdown</code>というファイルが出来上がるのでエントリーを編集する</p>

<h2>ブログエントリーじゃないページの追加</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake new_page["title"]</span></code></pre></td></tr></table></div></figure>


<p><code>source/title/index.markdown</code>というファイルが出来上がるので編集する</p>

<h2>サイトのプレビュー</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake preview</span></code></pre></td></tr></table></div></figure>


<p>変更したファイルはすぐに検知して自動的に再生成する(後述のサイト生成を行う必要なしに反映される)</p>

<h2>サイト生成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake generate</span></code></pre></td></tr></table></div></figure>


<h2>サイトのデプロイ</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake deploy</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyllメモ]]></title>
    <link href="http://inamem9999.github.io/blog/2017/07/08/jekyll-memo/"/>
    <updated>2017-07-08T16:17:12+09:00</updated>
    <id>http://inamem9999.github.io/blog/2017/07/08/jekyll-memo</id>
    <content type="html"><![CDATA[<h2>インストールする前</h2>

<h3>rvmのインストールと使用するrubyの選択</h3>

<p><a href="http://qiita.com/yukofeb/items/6cad3a6de48dab60889b">このあたり</a>を参考</p>

<h3>インストール</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install jekyll</span></code></pre></td></tr></table></div></figure>


<h3>サイトの新規作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ jekyll new my-new-site</span></code></pre></td></tr></table></div></figure>


<p>以下のファイルとディレクトリが自動的に作成される</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_config.yml  _layouts    _sass       css     index.html
</span><span class='line'>_includes _posts      about.md    feed.xml</span></code></pre></td></tr></table></div></figure>


<h3>サイトのビルド</h3>

<p><code>$ jekyll build</code> で<code>./_site</code>に作成。</p>

<p>出力先を指定するには<code>--destination</code>で指定する</p>

<p><code>$ jekyll build --destination &lt;destination&gt;</code></p>

<p><code>--watch</code>オプションで変更を監視し、自動的に再生成を行わせることもできる</p>

<h3>ビルドしたサイトの確認</h3>

<p><code>$ jekyll serve</code></p>

<p>プレビュー用サーバを<code>http://localhost:4000/</code>で起動する</p>

<p>こんな感じで表示される</p>

<p><img src="http://inamem9999.github.io/images/jekyll_sample.png" alt="jekyll_sample.png" /></p>

<p>faviconが無いと怒られる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[2017-06-17 12:28:34] ERROR `/favicon.ico' not found.</span></code></pre></td></tr></table></div></figure>


<h3>postレイアウト指定で</h3>

<p>こんなファイルでビルドすると</p>

<p>sample.md</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: サンプル
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>サンプル
</span></code></pre></td></tr></table></div></figure>


<p>こんなエラーが出る</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Generating... 
</span><span class='line'>Invalid Date: '' is not a valid datetime.
</span><span class='line'>Liquid Exception: exit in _layouts/post.html</span></code></pre></td></tr></table></div></figure>


<p>このときは、<code>date</code>を指定してやる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: サンプル
</span><span class='line'>date: 2017/06/17 12:30:00 +0900
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>サンプル
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ansibleメモ]]></title>
    <link href="http://inamem9999.github.io/blog/2017/07/08/ansible-memo/"/>
    <updated>2017-07-08T16:12:03+09:00</updated>
    <id>http://inamem9999.github.io/blog/2017/07/08/ansible-memo</id>
    <content type="html"><![CDATA[<h2>homebrew</h2>

<p>省略</p>

<h2>Ansible</h2>

<h3>インストール</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install ansible</span></code></pre></td></tr></table></div></figure>


<h3>接続先の設定</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir ansible
</span><span class='line'>$ mkdir ansible/inventory
</span><span class='line'>$ cd ansible
</span><span class='line'>$ vi inventory/hosts</span></code></pre></td></tr></table></div></figure>


<p>vagrantなどでsshのポート番号をデフォルト値以外にしている場合、ansible_portで指定する</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[targets]
</span><span class='line'>127.0.0.1 ansible_port=2222</span></code></pre></td></tr></table></div></figure>


<h3>疎通確認</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible all -i inventory/hosts -u vagrant -m ping
</span><span class='line'>127.0.0.1 | SUCCESS =&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Playbook作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vi myplaybook.yml
</span><span class='line'>- hosts: targets
</span><span class='line'>  become: yes
</span><span class='line'>  tasks:
</span><span class='line'>  - name: install git
</span><span class='line'>    apt:
</span><span class='line'>      name: git
</span><span class='line'>      update_cache: yes
</span><span class='line'>  - name: install cmake
</span><span class='line'>    apt:
</span><span class='line'>      name: cmake
</span><span class='line'>      update_cache: yes
</span></code></pre></td></tr></table></div></figure>


<h3>文法チェック</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i hosts myplaybook.yml --syntax-check
</span><span class='line'>
</span><span class='line'>playbook: myplaybook.yml</span></code></pre></td></tr></table></div></figure>


<h3>タスクリスト表示</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$  ansible-playbook -i hosts myplaybook.yml --list-tasks
</span><span class='line'>
</span><span class='line'>playbook: myplaybook.yml
</span><span class='line'>
</span><span class='line'>  play #1 (targets): targets  TAGS: []
</span><span class='line'>    tasks:
</span><span class='line'>      install tools   TAGS: []</span></code></pre></td></tr></table></div></figure>


<h3>dry-run</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i hosts -u vagrant myplaybook.yml --check
</span><span class='line'>
</span><span class='line'>PLAY [targets] *****************************************************************
</span><span class='line'>
</span><span class='line'>TASK [Gathering Facts] *********************************************************
</span><span class='line'>ok: [127.0.0.1]
</span><span class='line'>
</span><span class='line'>TASK [install git] *************************************************************
</span><span class='line'>ok: [127.0.0.1]
</span><span class='line'>
</span><span class='line'>TASK [install cmake] ***********************************************************
</span><span class='line'>changed: [127.0.0.1]
</span><span class='line'>
</span><span class='line'>PLAY RECAP *********************************************************************
</span><span class='line'>127.0.0.1                  : ok=3    changed=1    unreachable=0    failed=0 </span></code></pre></td></tr></table></div></figure>


<h3>実行</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ansible-playbook -i hosts -u vagrant myplaybook.yml
</span><span class='line'>
</span><span class='line'>PLAY [targets] *****************************************************************
</span><span class='line'>
</span><span class='line'>TASK [Gathering Facts] *********************************************************
</span><span class='line'>ok: [127.0.0.1]
</span><span class='line'>
</span><span class='line'>TASK [install git] *************************************************************
</span><span class='line'>ok: [127.0.0.1]
</span><span class='line'>
</span><span class='line'>TASK [install cmake] ***********************************************************
</span><span class='line'>changed: [127.0.0.1]
</span><span class='line'>
</span><span class='line'>PLAY RECAP *********************************************************************
</span><span class='line'>127.0.0.1                  : ok=3    changed=1    unreachable=0    failed=0 </span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrantメモ]]></title>
    <link href="http://inamem9999.github.io/blog/2017/07/08/vagrant-memo/"/>
    <updated>2017-07-08T16:05:58+09:00</updated>
    <id>http://inamem9999.github.io/blog/2017/07/08/vagrant-memo</id>
    <content type="html"><![CDATA[<h2>HomeBrew</h2>

<p>省略</p>

<h2>インストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew cask install vagrant</span></code></pre></td></tr></table></div></figure>


<h2>Package作成前に行うこと</h2>

<ol>
<li>vagrantユーザー作成</li>
<li>vagrantをsudoers入り</li>
<li>visudoでvagrantを <code>!requiretty</code> 指定</li>
<li>visudoでvagrantを <code>NOPASSWD: ALL</code>にする</li>
</ol>


<h2>Package作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant package --base &lt;VM名&gt;　--output &lt;Box名&gt;</span></code></pre></td></tr></table></div></figure>


<p>時間がかかるのでterminal-notifierやsayを仕込んでおいて他の作業をしよう</p>

<h2>Box追加</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant box add --name &lt;name&gt; &lt;BoxのパスもしくはURL&gt;</span></code></pre></td></tr></table></div></figure>


<p>時間がかかるので(以下略)</p>

<h2>Vagrantfile作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant init &lt;name&gt;</span></code></pre></td></tr></table></div></figure>


<p>自作のssh鍵を使う場合</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.ssh.private_key_path = '/path/to/rsa_key'</span></code></pre></td></tr></table></div></figure>


<h2>起動</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant up &lt;name&gt;</span></code></pre></td></tr></table></div></figure>


<p>初回は時間がかかる</p>
]]></content>
  </entry>
  
</feed>
